{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joelmcgill/Desktop/newDevProj/Shopify/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Index = function Index() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 7\n    }\n  }, \"Sample app using React and Next.js\"));\n};\n\n_c = Index;\n\nvar ngrok = require('ngrok');\n\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var url;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return ngrok.connect();\n\n        case 2:\n          url = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/joelmcgill/Desktop/newDevProj/Shopify/pages/index.js"],"names":["Index","ngrok","require","connect","url"],"mappings":";;;;;;;;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADU;AAAA,CAAd;;KAAMA,K;;AAKN,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,yDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACmBD,KAAK,CAACE,OAAN,EADnB;;AAAA;AACOC,UAAAA,GADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD;;AAGE,eAAeJ,KAAf","sourcesContent":["const Index = () => (\n    <div>\n      <p>Sample app using React and Next.js</p>\n    </div>\n  );\nconst ngrok = require('ngrok');\n(async function() {\n  const url = await ngrok.connect();\n})();\n  export default Index;"]},"metadata":{},"sourceType":"module"}